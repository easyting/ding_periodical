<?php

/**
 * @file
 * Shows issue information on periodicals.
 */
// Load Field module hooks.
module_load_include('inc', 'ding_periodical', 'ding_periodical.field');

drupal_add_css(drupal_get_path('module', 'ding_periodical') . '/css/ding_periodical.css');

/**
 * Implements hook_theme().
 */
function ding_periodical_theme() {
  return array(
    'ding_periodical_issues' => array(
      // 'variables' => array('entity', 'issues'),
      'render element' => 'elements',
    ),
  );
}

/**
 * Theming function.
 */
function theme_ding_periodical_issues($variables) {
  $items = array();
  $entity = $variables['elements']['#entity'];
  $local_id = $entity->localId;
  $elements = array_reverse($variables['elements']['#issues'], TRUE);

  foreach ($elements as $volume => $issues) {
    $iss = array();

    // For periodicals without month period (year only).
    if (isset($issues['']['local_id'])) {
      $issue = '';
      $issue_id = $issues['']['local_id'];

      $normalized_id = md5($issue_id);
      ding_periodical_store_periodical($normalized_id, $issue_id, $volume, $issue, $entity);

      $holding_data = ding_periodical_holding_data($local_id, $volume, $issue);

      $holding = array(
        array(
          'data' => '<div class="periodical-holdings">' . $holding_data . '</div>',
          'class' => array('periodical-holdings'),
        )
      );

      $vol = array(
        'data' => '<div id="periodical-id-' . $normalized_id . '" class="ding-periodical-fold ding-periodical-issue">' . $volume . '</div>',
        'children' => $holding,
        'class' => array('ding-periodical-foldable'),
      );
    }
    // For montly periodicals.
    else {
      foreach ($issues as $key => $availability) {
        $issue = $key;
        $issue_id = $availability['local_id'];

        $normalized_id = md5($issue_id);
        ding_periodical_store_periodical($normalized_id, $issue_id, $volume, $issue, $entity);

        $holding_data = ding_periodical_holding_data($local_id, $volume, $issue);

        $holding = array(
          array(
            'data' => '<div class="periodical-holdings">' . $holding_data . '</div>',
            'class' => array('periodical-holdings'),
          )
        );

        $iss[] = array(
          'data' => '<span id="periodical-id-' . $normalized_id . '" class="ding-periodical-fold ding-periodical-issue">' . $issue . '</span>',
          'children' => $holding,
        );
      }

      $vol = array(
        'data' => '<div class="ding-periodical-fold expand">' . $volume . '</div>',
        'children' => $iss,
        'class' => array('ding-periodical-foldable'),
      );
    }

    $items[] = $vol;
  }

  return theme('item_list', array('items' => $items, 'attributes' => array('class' => array('ding-periodical-issues'))));
}

/**
 * Store the data for further reservation routine.
 *
 * @param String $normalized_id
 *   MD5 hash of the periodical id.
 * @param String $issue_id
 *   The issue identifier.
 * @param String $volume
 *   Volume, usualy presented as year.
 * @param String $key
 *   Issue name, as being displayed.
 * @param TingObject $entity
 *   The holder of the periodical.
 */
function ding_periodical_store_periodical($normalized_id = '', $issue_id = NULL, $volume = NULL, $key = NULL, $entity = NULL) {
  // @todo
  // This is to be refactored to prevent segfaults.
  if (!empty($issue_id) && module_exists('ding_periodical_reservation')) {
    $_SESSION['ding_periodical_reservation'][$normalized_id] = array(
      'issue_id' => $issue_id,
      'volume' => $volume,
      'key' => $key,
      'entity' => $entity,
    );
  }
}

/**
 * Fetch periodical availability table.
 *
 * @param $item
 *   Ting object local id, parent of periodical.
 * @param $periodical
 *   Periodical id.
 * @return
 *   HTML markup.
 */
function ding_periodical_holding_data($item = NULL, $volume = NULL, $issue_id = NULL) {
  $availability_table = '';
  if (!empty($item)) {
    $holdings = &drupal_static(__FUNCTION__, NULL);
    if (!isset($holdings[$item])) {
      $holdings = ding_provider_invoke('availability', 'issues', array($item));
    }

    if (!empty($volume)) {
      if (!empty($issue_id)) {
        $issue = $holdings[$item]['issues'][$volume][$issue_id];
      }
      else {
        $issue = $holdings[$item]['issues'][$volume][''];
      }

      $availability_table = ding_periodical_build_table($issue);
    }
  }

  return $availability_table;
}

/**
 * Build a markup for the availability table.
 *
 * @param $issue
 *   Issue array, with keys:
 *   - local_id: Periodical identifier.
 *   - provider: Provider identifier, 'alma' here.
 *   - placement: Item placement info.
 *     - location: Actual location string.
 *     - ordered_count
 *     - checked_out_count
 *     - reference_count
 *     - total_count
 *     - available_count
 *     - reservable
 *
 * Keys checked_out_count, reference_count, ordered_count
 * appear only in alma.
 *
 * @todo
 *   This table DOES NOT contain the reservations count,
 *   since this number comes as a separate value, for the whole
 *   ting item, not the periodicals.
 *
 * @return
 *   HTML markup for the availability table.
 */
function ding_periodical_build_table($issue) {
  $header = array(
    'placement' => t('Placement'),
    'copies' => t('Copies'),
    'home' => t('At home'),
  );

  $rows = array();

  if ($issue['provider'] === 'alma') {
    $header['not_for_loan'] = t('Not for loan');
    $header['checked_out'] = t('Checked out');
  }

  $i = 0;
  foreach ($issue['placement'] as $placement) {
    $rows[$i] = array(
      $placement['location'],
      $placement['total_count'],
      $placement['available_count'],
    );

    if ($issue['provider'] === 'alma') {
      $rows[$i][] = $placement['reference_count'];
      $rows[$i][] = $placement['checked_out_count'];
    }

    $i++;
  }

  return theme('table', array('header' => $header, 'rows' => $rows));
}
